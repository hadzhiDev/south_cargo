from django.contrib import admin
from django.contrib import messages
from django.contrib.admin.filters import DateFieldListFilter
from django.conf import settings

from whatsapp_api_client_python import API

from cargo.models import Load, Client, ClientBatchImport
from cargo.filters import DateFilter

greenAPI = API.GreenAPI(
    settings.GREEN_API_ID, settings.GREEN_API_TOKEN
)

@admin.register(Load)
class LoadAdmin(admin.ModelAdmin):
    list_display = ('code', 'kilo', 'date', 'client', 'sent_to_client')
    list_filter = (DateFilter,) 
    search_fields = ('code', 'kilo', 'date', 'client')
    actions = ['send_to_whatsapp']
    readonly_fields = ('sent_to_client',)
    autocomplete_fields = ['client']

    @admin.action(description="üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –≥—Ä—É–∑—ã –≤ WhatsApp")
    def send_to_whatsapp(self, request, queryset):
        successful_count = 0
        failed_count = 0

        for load in queryset:
            if load.client and load.client.whatsapp_chat_id:
                client = load.client
                chat_id = client.whatsapp_chat_id

                message = f"""üëã –ê—Å—Å–∞–ª–æ–æ–º—É –ê–ª–µ–π–∫—É–º, —É—Ä–º–∞—Ç—Ç—É—É –∫–∞—Ä–¥–∞—Ä {client.code}, {load.date} –°–∫–ª–∞–¥–∫–∞ —Ç“Ø—à–∫”©–Ω –∂“Ø–∫ –∫–µ–ª–¥–∏! \n
üî¢ –ö–æ–¥: {load.code} \n
üí∞ –¢”©–ª”©–º: {load.price} —Å–æ–º \n        
üìç –ë–∏–∑–¥–∏–Ω –¥–∞—Ä–µ–∫: –ú–∞—Å–∞–ª–∏–µ–≤–∞ 46–∞, –±–æ–ª–∂–æ–ª –ö–µ–ª–µ—á–µ–∫ –±–∞–∑–∞—Ä—ã
üïô 10:00 - 17:30 –≥–∞ —á–µ–π–∏–Ω –∞–ª—ã–ø –∫–µ—Ç—Å–µ“£–∏–∑ –±–æ–ª–æ—Ç
ü§ù –£—Ä–º–∞—Ç—Ç–æ–æ –º–µ–Ω–µ–Ω, –Æ–ì –ö–∞—Ä–≥–æ \n 
üìû –¢–µ–ª: 0550 68 69 61"""

                response = greenAPI.sending.sendMessage(chat_id, message)
                # üìÖ –î–∞—Ç–∞ –ø—Ä–∏–±—ã—Ç–∏—è: {load.date}\n‚öñÔ∏è –ú–∞—Å—Å–∞: {load.kilo} –∫–≥\n –û—Ç –≤–∞—Å: {load.price} 
                if response.code == 200:
                    load.sent_to_client = True
                    load.save()
                    successful_count += 1
                else:
                    failed_count += 1

        self.message_user(
            request,
            f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {successful_count}. ‚ùå –û—à–∏–±–∫–∏: {failed_count}",
            messages.SUCCESS if successful_count else messages.ERROR
        )


@admin.register(Client)
class ClientAdmin(admin.ModelAdmin):
    list_display = ('code', 'wa_number', 'name')
    list_filter = ('code', 'wa_number', 'name')
    search_fields = ('code', 'wa_number', 'name')


@admin.register(ClientBatchImport)
class ClientBatchImportAdmin(admin.ModelAdmin):
    list_display = ("id",)
    
    def save_model(self, request, obj, form, change):
        obj.save()  # Calls the overridden `save()` method in the model
        self.message_user(request, "‚úÖ –ö–ª–∏–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
